buildscript {
	ext {
		sonar_token = System.getenv('SONAR_TOKEN')
		sonar_url = System.getenv('SONAR_URL')
	}
}
plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.sonarqube" version "4.3.0.3225"
}

group = 'preonboarding'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

}

tasks.named('test') {
	useJUnitPlatform()
}
sonar {
	properties {
		property("sonar.coverage.jacoco.xmlReportPaths", "$buildDir/report.JacocoXML.xml")
		property("sonar.projectKey", "user-service-token")
		property("sonar.organization", "myOrganization")
		property("sonar.host.url", "$sonar_url")
		property("sonar.login", "$sonar_token")
	}
}

jacoco {
	toolVersion = '0.8.9'

	reportsDirectory = layout.buildDirectory.dir('reports/result')
}

test.finalizedBy 'jacocoTestReport', 'sonarqube'


jacocoTestReport {
	reports {
		html.required = false
		csv.required = true
		xml.required = true

		xml.outputLocation = file("$buildDir/report/JacocoXML.xml")
		csv.outputLocation = file("$buildDir/report/JacocoCSV.csv")

	}

	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.10
			}
		}
	}
}
test {
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacoco.exec")
	}
	finalizedBy('jacocoTestReport', 'sonarqube')
}
